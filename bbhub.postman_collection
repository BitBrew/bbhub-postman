{
	"variables": [],
	"info": {
		"name": "bbhub",
		"_postman_id": "c9186d3f-e22f-bcad-12b0-d8bdf751d289",
		"description": "Sample API calls to manage all your platform resources.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1. Auth",
			"description": "",
			"item": [
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Token Created\"] = typeof jsonData.accessToken != 'undefined'",
									"",
									"if(typeof jsonData.accessToken != 'undefined') {",
									"    postman.setEnvironmentVariable(\"token\", jsonData.accessToken);",
									"    tests[\"Token Set\"] = jsonData.accessToken === postman.getEnvironmentVariable(\"token\");",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{protocol}}://{{url}}/v1/token",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text",
									"enabled": true
								},
								{
									"key": "username",
									"value": "{{email}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Requests an access token for a user"
					},
					"response": []
				},
				{
					"name": "Get Access Token (app)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Token Created\"] = typeof jsonData.accessToken != 'undefined'",
									"",
									"if(typeof jsonData.accessToken != 'undefined') {",
									"    postman.setEnvironmentVariable(\"token\", jsonData.accessToken);",
									"    tests[\"Token Set\"] = jsonData.accessToken === postman.getEnvironmentVariable(\"token\");",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{protocol}}://{{url}}/v1/token",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text",
									"enabled": true
								},
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "scope",
									"value": "app",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Requests an access token for an app"
					},
					"response": []
				}
			]
		},
		{
			"name": "2a. Danlaw TCP Command Set Management",
			"description": "",
			"item": [
				{
					"name": "List Command Sets",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/commands",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Command Set",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/commands",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"standard\",\n    \"description\": \"Get data and events.\",\n    \"commands\": {\n        \"0\": [\"#GET,DATA,D,0$\"],\n        \"1\": [\"#GET,DATA,D,0$\"],\n        \"2\": [\"#GET,DATA,D,0$\"],\n        \"3\": [\"#GET,DATA,E,0$\"],\n        \"4\": [\"#GET,DATA,D,0$\"],\n        \"5\": [\"#GET,DATA,D,0$\"],\n        \"6\": [\"#GET,DATA,D,0$\"],\n        \"7\": [\"#GET,DATA,D,0$\"],\n        \"8\": [\"#GET,DATA,D,0$\"],\n        \"9\": [\"#GET,DATA,D,0$\"]\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Command Set",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/commands/{{commandSetName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Command Set",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/commands/{{commandSetName}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "2b. Device Management",
			"description": "",
			"item": [
				{
					"name": "List Devices",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Device",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deviceId\": \"{{deviceId}}\",\n    \"brokers\": [\n    \t{\n    \t\t\"type\": \"DanlawUdp\"\n    \t},\n        {\n            \"type\": \"DanlawTcp\",\n            \"commands\": \"{{commandSetName}}\",\n            \"imei\": \"{{imei}}\",\n            \"configurationFolderName\": \"{{optionalFolderName}}\",\n            \"firmwareFolderName\": \"{{optionalFolderName}}\"\n        },\n        {\n            \"type\": \"HTTP\"\n        }\n    ],\n    \"enabled\": true\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Device",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/{{deviceId}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove Device",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/{{deviceId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Device Brokers",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/{{deviceId}}/brokers",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add Device Broker",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/{{deviceId}}/brokers",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"DanlawTcp\",\n    \"commands\": \"{{commandSetName}}\",\n    \"imei\": \"{{imei}}\",\n    \"configurationFolderName\": \"{{optionalFolderName}}\",\n    \"firmwareFolderName\": \"{{optionalFolderName}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Device Broker",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/{{deviceId}}/brokers",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"DanlawTcp\",\n    \"commands\": \"{{commandSetName}}\",\n    \"imei\": \"{{imei}}\",\n    \"configurationFolderName\": \"{{optionalFolderName}}\",\n    \"firmwareFolderName\": \"{{optionalFolderName}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove Device Broker",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/{{deviceId}}/brokers/{{brokerType}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Device File Statuses",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/{{deviceId}}/files/state",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Last Communication Dates for All Devices",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/last-communications",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Last Communication Date for a Device",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/{{deviceId}}/last-communications",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View All Devices in a Firmware Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/firmwareFolders/{{folderName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contents",
									"value": "",
									"type": "file",
									"enabled": true,
									"warning": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View All Devices in a Configuration Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/devices/configurationFolders/{{folderName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contents",
									"value": "",
									"type": "file",
									"enabled": true,
									"warning": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Rule Management",
			"description": "",
			"item": [
				{
					"name": "List Rules",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/rules",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Rule for a Queue",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/rules",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "create rule {{ruleName}}\nusing json_body = { header = header, body = body }\nwhere true\nwith amqp(body = json(bindings.json_body))"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Rule for a Webhook",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/rules",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "create rule {{ruleName}}\nusing json_body = { header = header, body = body }\nwhere true\nwith post(uri='{{postURL}}', body = json(bindings.json_body))"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Rule",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/rules/{{ruleName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Rule",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/rules/{{ruleName}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the identified rule"
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Queue Management",
			"description": "",
			"item": [
				{
					"name": "List Queues",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/queues",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Queue",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/queues",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{queueName}}\",\n    \"rules\": [\"{{ruleName}}\"]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Queue",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/queues/{{queueName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Queue",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/queues/{{queueName}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration Management",
			"description": "",
			"item": [
				{
					"name": "List Folders",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contents",
									"value": "",
									"type": "file",
									"enabled": true,
									"warning": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"{{folderName}}\" }"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders/{{folderName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contents",
									"value": "",
									"type": "file",
									"enabled": true,
									"warning": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders/{{folderName}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"activeFileName\": \"{{fileName}}\" }"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders/{{folderName}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Files",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders/{{folderName}}/files",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "File Upload",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders/{{folderName}}/files",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contents",
									"type": "file",
									"enabled": true,
									"warning": "",
									"src": "smallfile.txt",
									"value": ""
								},
								{
									"key": "name",
									"value": "{{fileName}}",
									"type": "text",
									"enabled": true,
									"warning": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View File",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders/{{folderName}}/files/{{fileName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete File",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/configurationFolders/{{folderName}}/files/{{fileName}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Firmware Management",
			"description": "",
			"item": [
				{
					"name": "List Folders",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contents",
									"value": "",
									"type": "file",
									"enabled": true,
									"warning": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\": \"{{folderName}}\" }"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders/{{folderName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contents",
									"value": "",
									"type": "file",
									"enabled": true,
									"warning": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders/{{folderName}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"activeFileName\": \"{{fileName}}\" }"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Folder",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders/{{folderName}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Files",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders/{{folderName}}/files",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "File Upload",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders/{{folderName}}/files",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contents",
									"type": "file",
									"enabled": true,
									"warning": "",
									"src": "README.md",
									"value": ""
								},
								{
									"key": "name",
									"value": "{{fileName}}",
									"type": "text",
									"enabled": true,
									"warning": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View File",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders/{{folderName}}/files/{{fileName}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete File",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}/firmwareFolders/{{folderName}}/files/{{fileName}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Tenant Ops",
			"description": "",
			"item": [
				{
					"name": "Get Tenant Info",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/tenants/{{tenantId}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"description": "",
			"item": [
				{
					"name": "Get User List",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/admin/users",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the list of registered users"
					},
					"response": []
				},
				{
					"name": "Get User by Email",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/admin/users?email={{email}}",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a specific user by email with all permissions."
					},
					"response": []
				},
				{
					"name": "Add User",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/admin/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"me@google.com\",\n    \"password\" : \"mypassword\",\n    \"roles\": [ \"tenantAdmin\" ]\n}"
						},
						"description": "Adds a User to the system"
					},
					"response": []
				},
				{
					"name": "Update User Password",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/admin/users/{{userId}}/password",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "newPassword"
						},
						"description": "Change the user's password"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"url": "{{protocol}}://{{url}}/v1/admin/users/{{userId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a User from the system (by providing its Id) "
					},
					"response": []
				}
			]
		}
	]
}