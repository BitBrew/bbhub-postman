{
	"variables": [],
	"info": {
		"name": "bbhub",
		"_postman_id": "641ba36c-d01f-ddf5-dabd-3831c16989bb",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Analytics",
			"description": "",
			"item": [
				{
					"name": "List Rules",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Rule",
					"request": {
						"url": {
							"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules/AllEvents?",
							"host": [
								"{{protocol}}{{url}}{{port}}"
							],
							"path": [
								"v1",
								"tenants",
								"{{tenantId}}",
								"rules",
								"AllEvents"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Post Rule",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "create rule gps\nusing  post_body = { notificationType = 'gps'\n                   , deviceId = header.deviceId\n                   , data =\n                       { latitude = body.pidData?.GpsReading?.latitude?\n                       , longitude = body.pidData?.GpsReading?.longitude?\n                       }\n                   , header = body.pidData?.GpsReading?.gps?.heading?\n                   }\n,      bin_id = '127dw6f1'\nwhere  eq(body.type, 'TripData')\nwith   post(uri=s'http://requestb.in/${bindings.bin_id}', body= json(bindings.post_body))\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create AMQP Rule",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "create rule AllEvents using my_map = { body = body, header = header } where true with amqp(body = json(bindings.my_map))\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Destination Rule",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "create rule DynamoDB\nusing itemBody = { body = body, header = header }\nwhere true\nwith Destination(\n  item = json(bindings.itemBody),\n  destinationId = '8b6a45a7-fdd5-4b54-a259-3b6955d1766c'\n)"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Hashed Exchange Rule",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "create rule AllEvents using my_map = { body = body, header = header } where true with amqp(body = json(bindings.my_map), exchange='x-hash', key=header.deviceId)"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Rule",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules/AllEvents",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"enabled\": false,\n\t\"text\": \"create rule AllEvents using my_map = { body = body, header = header } where true with amqp(body = json(bindings.my_map))\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Enable/DisableRule",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules/AllEvents",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\":false\n}\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Rule Syntax",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules/AllEvents",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"text\":\"rule AllEvents\\nusing myMap = {\\n  header = hessader,\\n  body = body\\n}\\nwhere contains(header.tags, 'banana')\\nwith amqp(body = json(bindings.myMap))\"}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Rule",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/rules/AllEvents",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Queues",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/queues",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Hashed Exchanges",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/hashed-exchanges",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Queue",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/queues/AllEvents",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Hashed Exchange",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/hashed-exchanges/x-hash",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Queue (rules)",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/queues",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"AllEven12ts\",\n    \"rules\": [\"AllEvents\"]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Queue(rule/device)",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/queues",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"AllEvent\",\n\"rules\":[\"AllEvents\",\"AllEvents2\"]}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Hashed Exchange",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/hashed-exchanges",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"x-hash\",\n    \"numQueues\": 5\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Queue (devices)",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/queues",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"amqQueueDevices\",\n    \"devices\": [\"x\", \"z\"]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create Queue (unmanaged)",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/queues",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"amqQueueUnmanaged\",\n    \"unmanaged\": true\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Queue",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/queues/AllEvents",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete Hashed Exchange",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/hashed-exchanges/x-hash",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Hashed Exchange",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/hashed-exchanges/x-hash",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"numQueues\": 1\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Version(Remove)",
					"request": {
						"url": "http://{{analyticsUrl}}:{{analyticsPort}}/v1/version",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Health Check(remove)",
					"request": {
						"url": "http://{{analyticsUrl}}:{{analyticsPort}}/v1/health",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Ingestion",
			"description": "",
			"item": [
				{
					"name": "Version(remove)",
					"request": {
						"url": "http://{{ingestionUrl}}:{{ingestionPort}}/v1/version",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Health Check(remove)",
					"request": {
						"url": "http://{{ingestionUrl}}:{{ingestionPort}}/v1/health",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Send Device Event",
					"request": {
						"url": "http://{{deviceUrl}}:{{deviceHttpPort}}/v1/event",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deviceId\": \"1\", \n    \"payload\": {}\n}"
						},
						"description": "1. It is backend API.\n2. It is used to ingest TCP and UDP data to the http broker type devices.\n3. In the body , pass the device id and payload as device data."
					},
					"response": []
				}
			]
		},
		{
			"name": "Management",
			"description": "",
			"item": [
				{
					"name": "Device Ops",
					"description": "",
					"item": [
						{
							"name": "List Devices",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Device (Paging)",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices?pageNo=1&pageSize=10",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"devices"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": "1. This API is front end  API.\n2. It is used  to view  details about an individual tag  in a particular tenant.\n3. Pass valid tenant id in environment variable- tenantId\n4. Pass valid tagid in the value of Path valrible to execute this API."
							},
							"response": []
						},
						{
							"name": "Create Device",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"1\",\n    \"brokers\": [\n        {\n            \"type\": \"DanlawTcp\",\n            \"imei\": \"1\",\n            \"configurationFolderName\": \"cfgFolder\",\n            \"firmwareFolderName\": \"fwFolder\"\n        },\n        {\n            \"type\": \"DanlawUdp\"\n        }\n    ],\n    \"tracing\": \"full\",\n    \"enabled\": true,\n    \"tags\":[\"1773c3f2-6de6-4963-af6f-1b1fb6b49d81\",\"7fb9ad61-38a2-4b25-9dab-9caafa8ebd04\"]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Bulk Create Device",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices-bulk",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n     \n  \"devices\": [\n    {\n      \"deviceId\": \"1\",\n      \"brokers\": [\n          {\n              \"type\": \"DanlawTcp\",\n              \"imei\": \"1\",\n              \"configurationFolderName\": \"cfgFolder\",\n              \"firmwareFolderName\": \"fwFolder\"\n          },\n          {\n              \"type\": \"DanlawUdp\"\n          }\n      ],\n      \"tracing\": \"full\",\n      \"enabled\": true\n    },{\n      \"deviceId\": \"2\",\n      \"brokers\": [\n          {\n              \"type\": \"DanlawTcp\",\n              \"imei\": \"2\",\n              \"configurationFolderName\": \"cfgFolder\",\n              \"firmwareFolderName\": \"fwFolder\"\n          },\n          {\n              \"type\": \"DanlawUdp\"\n          }\n      ],\n      \"tracing\": \"full\",\n      \"enabled\": true\n    },{\n      \"deviceId\": \"3\",\n      \"brokers\": [\n          {\n              \"type\": \"DanlawTcp\",\n              \"imei\": \"3\",\n              \"configurationFolderName\": \"cfgFolder\",\n              \"firmwareFolderName\": \"fwFolder\"\n          },\n          {\n              \"type\": \"DanlawUdp\"\n          }\n      ],\n      \"tracing\": \"full\",\n      \"enabled\": true\n    }\n  ],\n  \"tags\":[\"1773c3f2-6de6-4963-af6f-1b1fb6b49d81\",\"7fb9ad61-38a2-4b25-9dab-9caafa8ebd04\"]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Remove Device",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Bulk Remove Device",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"deviceIds\": [\n\t\t\"1\",\n\t\t\"2\",\n\t\t\"3\"\n\t]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Bulk Update Device",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices-bulk",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"devices\": [\n\t\t{\n\t\t\t\"deviceId\": \"1\",\n\t\t\t\"enabled\": true,\n\t\t\t\"tracing\": \"disabled\"\n\t\t},\n\t\t{\n\t\t\t\"deviceId\": \"2\",\n\t\t\t\"enabled\": false,\n\t\t\t\"tracing\": \"minimal\"\n\t\t}\n\t]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Devices' Last Communications",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/last-communications",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device's Last Communications",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/last-communications",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Enable Device",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabled\": true\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Disable Device",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabled\": false\n}"
								},
								"description": "1. It is fron end API.\n2. It is used to disabled any enabled   device in a particuar tenant.\n3. Pass the valid tenant id in the environment varaible.\n4. In the Body, pass enabled as false to enbale the device.\n5. Pass the device id (to disable ) in the path variable value."
							},
							"response": []
						},
						{
							"name": "View Device Broker Info",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/brokers",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Device Broker",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/brokers",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"DanlawTcp\",\n    \"imei\": \"343445\",\n    \"configurationFolderName\": \"cfgFolder\",\n    \"firmwareFolderName\": \"fwFolder\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Device Broker",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/brokers/DanlawTcp",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"imei\": \"1\",\n    \"configurationFolderName\": \"cfgFolder\",\n    \"firmwareFolderName\": \"fwFolder\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete Device Broker",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/brokers/DanlawTcp",
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Enable Device Tracing (minimal)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tracing\": \"minimal\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Enable Device Tracing (full)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tracing\": \"full\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Disable Device Tracing",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tracing\": \"disabled\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device Tracing Events",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/tracing",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Download Raw Tracing Event",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/tracing/dbc28fc0-5eed-11e6-a670-77c27dd5fa5e/raw",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device Tracing Events Within Time Range",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/tracing/from/2016-08-01/to/2016-09-01",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device File Status",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/files/status",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Clear Configuration Update Failure Status",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/configuration/retryStatus/reset",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Clear Firmware Update Failure Status",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/firmware/retryStatus/reset",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Set Update Failure Limit",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/files",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"updateFailureLimit\": 4\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Update Failure Limit",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/files",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device Tracing Events Within Time Range via UUID",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/tracing/from/2016-08-01/to/dbc28fc0-5eed-11e6-a670-77c27dd5fa5e",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Device Tag",
					"description": "",
					"item": [
						{
							"name": "List Device Tags",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device Tag",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/d3956efd-43c5-4745-810e-a522e5f03290",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Device Tags",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"sometag\",\n    \"color\": \"#d5d5d5\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Edit Device Tag",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/6e66ef5f-36e2-440e-a587-4a7a562d0fbf",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"sometag\",\n  \"color\": \"#d5d5d5\"\n}"
								},
								"description": ""
							},
							"response": [
								{
									"id": "2f461ce4-4404-4043-a14e-a5ef4ae2ac92",
									"name": "Edit Device Tag|200 OK",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/:tagid",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"tenants",
												"{{tenantId}}",
												"tags",
												":tagid"
											],
											"query": [],
											"variable": [
												{
													"key": "tagid",
													"value": "6e66ef5f-36e2-440e-a587-4a7a562d0fbf"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"sometag\",\n  \"color\": \"#d5d5d5\"\n}"
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Nov 2020 14:46:27 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "119"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{\n    \"color\": \"#d5d5d5\",\n    \"createdAt\": \"2020-11-19T14:44:12.901Z\",\n    \"id\": \"6e66ef5f-36e2-440e-a587-4a7a562d0fbf\",\n    \"name\": \"sometag\"\n}"
								}
							]
						},
						{
							"name": "Assign Device Tags",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/6e66ef5f-36e2-440e-a587-4a7a562d0fbf/devices",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"deviceIds\": [\"123456\", \"435354\", \"34343545\"]\n}"
								},
								"description": ""
							},
							"response": [
								{
									"id": "7b518190-fe9a-4b4a-a3fe-c9543be2b724",
									"name": "Assign Device Tags| 404 Not found",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/:tagId/devices",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"tenants",
												"{{tenantId}}",
												"tags",
												":tagId",
												"devices"
											],
											"query": [],
											"variable": [
												{
													"key": "tagId",
													"value": "6e66ef5f-36e2-440e-a587-4a7a562d0fbf"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceIds\": [\"1\", \"2\", \"3\"]\n}"
										},
										"description": ""
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Nov 2020 14:49:24 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "132"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"notFound\",\n    \"errors\": [\n        {\n            \"code\": \"notFound\",\n            \"detail\": \"Device(s) not found: 1, 2, 3\",\n            \"resource\": \"device\"\n        }\n    ],\n    \"message\": \"Not found\"\n}"
								},
								{
									"id": "fad5fb52-9e5c-4369-80b7-e34a7c1c4d22",
									"name": "Assign Device Tags| 200 OK",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/:tagId/devices",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"tenants",
												"{{tenantId}}",
												"tags",
												":tagId",
												"devices"
											],
											"query": [],
											"variable": [
												{
													"key": "tagId",
													"value": "6e66ef5f-36e2-440e-a587-4a7a562d0fbf"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceIds\": [\"123456\", \"435354\", \"34343545\"]\n}"
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Nov 2020 14:50:56 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "2"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Delete Device Tag",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/6e66ef5f-36e2-440e-a587-4a7a562d0fbf",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Unassign Device Tags",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/6e66ef5f-36e2-440e-a587-4a7a562d0fbf/devices",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"deviceIds\": [\"1\", \"2\", \"3\"]\n}"
								},
								"description": ""
							},
							"response": [
								{
									"id": "e19a90f2-ce1b-47f6-99a5-b3579dd31141",
									"name": "Unassign Device Tags|200 Ok",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/tags/:tagid/devices",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"tenants",
												"{{tenantId}}",
												"tags",
												":tagid",
												"devices"
											],
											"query": [],
											"variable": [
												{
													"key": "tagid",
													"value": "6e66ef5f-36e2-440e-a587-4a7a562d0fbf"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"deviceIds\": [\"1\", \"2\", \"3\"]\n}"
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Nov 2020 14:53:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "2"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Folder Ops - Configuration",
					"description": "",
					"item": [
						{
							"name": "List Folders",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": [
								{
									"id": "e5ba6b7f-d724-45c0-bdd9-5416d0e45d7e",
									"name": "List Folders| With 200 OK",
									"originalRequest": {
										"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders",
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Dec 2020 12:50:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "680"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{\n    \"configurationFolders\": [\n        {\n            \"activeFileName\": null,\n            \"activeVersion\": null,\n            \"modifiedAt\": \"2020-11-30T10:39:54.481Z\",\n            \"name\": \"AAA90908@@@@@******\",\n            \"numberOfContainedFiles\": 0\n        },\n        {\n            \"activeFileName\": null,\n            \"activeVersion\": null,\n            \"modifiedAt\": \"2020-11-30T10:39:54.481Z\",\n            \"name\": \"Joy\",\n            \"numberOfContainedFiles\": 1\n        },\n        {\n            \"activeFileName\": null,\n            \"activeVersion\": null,\n            \"modifiedAt\": \"2020-12-03T12:42:48.589Z\",\n            \"name\": \"Joytest1\",\n            \"numberOfContainedFiles\": 1\n        },\n        {\n            \"activeFileName\": null,\n            \"activeVersion\": null,\n            \"modifiedAt\": \"2020-12-03T12:47:19.232Z\",\n            \"name\": \"cfgFolder\",\n            \"numberOfContainedFiles\": 2\n        },\n        {\n            \"activeFileName\": null,\n            \"activeVersion\": null,\n            \"modifiedAt\": \"2020-11-30T10:39:54.481Z\",\n            \"name\": \"test1\",\n            \"numberOfContainedFiles\": 1\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "View Folder",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders/:FolderName",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"configurationFolders",
										":FolderName"
									],
									"query": [],
									"variable": [
										{
											"key": "FolderName",
											"value": ""
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Files",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders/:FolderName/files",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"configurationFolders",
										":FolderName",
										"files"
									],
									"query": [],
									"variable": [
										{
											"key": "FolderName",
											"value": "cfgFolder"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View File",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders/:FolderName/files/:FileName",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"configurationFolders",
										":FolderName",
										"files",
										":FileName"
									],
									"query": [],
									"variable": [
										{
											"key": "FolderName",
											"value": "cfgFolder"
										},
										{
											"key": "FileName",
											"value": "cfgFile"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Bulk Assign Folder",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders/:FodlerName/devices",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"configurationFolders",
										":FodlerName",
										"devices"
									],
									"query": [],
									"variable": [
										{
											"key": "FodlerName",
											"value": "cfgFolder"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n\t\"deviceIds\": [\"1\",\"2\",\"3\"]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Folder",
							"request": {
								"url": "{{protocol}}://{{url}}:{{port}}/v1/tenants/{{tenantId}}/configurationFolders/cfgFolder",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"activeFileName\": \"cfgFile\" }"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Folder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"name\": \"cfgFolder\" }"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete File",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders/cfgFolder/files/cfgFile",
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "File Upload Request",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders/cfgFolder/files",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "cfgFile",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "File Upload",
							"request": {
								"url": {
									"raw": "https://storage.googleapis.com/bitbrew-fota/production/bitbrew/cfg-cfgFolder/cfgFile?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=large-fota%40bb-hub-0.iam.gserviceaccount.com%2F20191212%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20191212T171410Z&X-Goog-Expires=1800&X-Goog-SignedHeaders=host&X-Goog-Signature=2df2e5bfbdf50ebcd5a3e07197b768dadc901be32e5ab3a6fa78ff4ac23f831a3ffb01c01d0325817bac5f2d561d6b6c5f59af3db5301712b18940818a1a18b5d57d5f16d81b9d969a48f7ba4e2085f2d6d0bf89735ed69d2a9f27d9506c608f0055f00aeb222f2cebdf271cdc45f860597553c387bc8c82520e2a66fc581d2eff30c5384f8186839024f4fa4b9e904be3d02a5e1277c17589efde1b13f4755ca0543d2011895b0110841d4ef4f46a90e7b215b3fde0ce217e6772739c3ec0b5b71d927a4acf178753a3e8cd7624033a8e18618120ff5c39bf97752f85fd9834c503c1ed167d6d7f863685aaf55522fb2a8f61626c9cc653aadda76f8eb08009",
									"protocol": "https",
									"host": [
										"storage",
										"googleapis",
										"com"
									],
									"path": [
										"bitbrew-fota",
										"production",
										"bitbrew",
										"cfg-cfgFolder",
										"cfgFile"
									],
									"query": [
										{
											"key": "X-Goog-Algorithm",
											"value": "GOOG4-RSA-SHA256"
										},
										{
											"key": "X-Goog-Credential",
											"value": "large-fota%40bb-hub-0.iam.gserviceaccount.com%2F20191212%2Fauto%2Fstorage%2Fgoog4_request"
										},
										{
											"key": "X-Goog-Date",
											"value": "20191212T171410Z"
										},
										{
											"key": "X-Goog-Expires",
											"value": "1800"
										},
										{
											"key": "X-Goog-SignedHeaders",
											"value": "host"
										},
										{
											"key": "X-Goog-Signature",
											"value": "2df2e5bfbdf50ebcd5a3e07197b768dadc901be32e5ab3a6fa78ff4ac23f831a3ffb01c01d0325817bac5f2d561d6b6c5f59af3db5301712b18940818a1a18b5d57d5f16d81b9d969a48f7ba4e2085f2d6d0bf89735ed69d2a9f27d9506c608f0055f00aeb222f2cebdf271cdc45f860597553c387bc8c82520e2a66fc581d2eff30c5384f8186839024f4fa4b9e904be3d02a5e1277c17589efde1b13f4755ca0543d2011895b0110841d4ef4f46a90e7b215b3fde0ce217e6772739c3ec0b5b71d927a4acf178753a3e8cd7624033a8e18618120ff5c39bf97752f85fd9834c503c1ed167d6d7f863685aaf55522fb2a8f61626c9cc653aadda76f8eb08009"
										}
									],
									"variable": []
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": ""
									}
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete Folder",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/configurationFolders/:FolderName",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"configurationFolders",
										":FolderName"
									],
									"query": [],
									"variable": [
										{
											"key": "FolderName",
											"value": "cfgFolder"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": "1. It is backend API.\n2. It is used to remove a configuration folder from your system. Any files inside the folder will also be deleted when you delete a folder. Deleting a folder that is assigned to devices is prohibited.\n3. Pass the valid tennat id in the environment varaible.\n4. Pass the Config folder name which need to delete in th path varaible value"
							},
							"response": []
						},
						{
							"name": "UnasignConfigurationFolder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/1/brokers/DanlawTcp",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"configurationFolderName\":\"cfgFolder\",\n    \"imei\":\"1\",\n    \"type\":\"DanlawTcp\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device Configuration Folder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/firmwareFolders/fwFolder",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Device Configuration Folders",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/configurationFolders",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Folder Ops - Firmware",
					"description": "The platform allows users to control firmware updates through a folder system.\nThere are two types of folders–firmware and configuration–which hold files of the matching type. Folders (not files) are assigned to individual devices, one of each kind of folder maximum.\n\nEach folder can have one and only one of its contained files marked as 'active.' Every time the device connects to the server, the system compares the name of the firmware file that the device reports to the name of the active files in the device's assigned folder. If there is a mismatch, the device will be told to update to the active file.\n\nWith this system, many devices can be updated with a single change in the selection of the active file.\n\nUse these methods to upload and manage firmware files and folders.",
					"item": [
						{
							"name": "List Folders",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Folder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/fwFolder",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Files",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/fwFolder/files",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Bulk Assign Folder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/fwFolder/devices",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n\t\"deviceIds\": [\"1\",\"2\",\"3\"]\n}\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "File Upload Request",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/fwFolder/files",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "fwFile",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Folder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/fwFolder",
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"activeFileName\": \"fwFile\" }"
								},
								"description": ""
							},
							"response": [
								{
									"id": "cd4ef0dd-3ec2-47e5-9464-d6bad761d96d",
									"name": "Update Folder|200 OK",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/:Foldername",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"tenants",
												"{{tenantId}}",
												"firmwareFolders",
												":Foldername"
											],
											"query": [],
											"variable": [
												{
													"key": "Foldername",
													"value": "fwFolder"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"activeFileName\": \"fwFile\" }"
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Mon, 07 Dec 2020 08:28:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "136"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{\n    \"activeFileName\": \"fwFile\",\n    \"activeVersion\": \"fwFile\",\n    \"modifiedAt\": \"2020-12-07T08:28:53.85Z\",\n    \"name\": \"fwFolder\",\n    \"numberOfContainedFiles\": 1\n}"
								}
							]
						},
						{
							"name": "Delete Folder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/fwFolder",
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": [
								{
									"id": "fe2fb20e-eeee-4997-b1f4-187ac37e00a7",
									"name": "Delete Folder|With 200 OK",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/:FolderName",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"tenants",
												"{{tenantId}}",
												"firmwareFolders",
												":FolderName"
											],
											"query": [],
											"variable": [
												{
													"key": "FolderName",
													"value": "fwFolder"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Dec 2020 12:01:54 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "2"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "View File",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/fwFolder/files/fwdFile",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": [
								{
									"id": "fe7b26b4-a0cb-41ba-bc63-76ba700b9f3b",
									"name": "View File|with 200 OK",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/:FolderName/files/:FileName",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"tenants",
												"{{tenantId}}",
												"firmwareFolders",
												":FolderName",
												"files",
												":FileName"
											],
											"query": [],
											"variable": [
												{
													"key": "FolderName",
													"value": "fwFolder"
												},
												{
													"key": "FileName",
													"value": "fwFile"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Mon, 07 Dec 2020 10:18:54 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "56"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"fwFile\",\n    \"sizeInBytes\": 25261,\n    \"version\": \"fwFile\"\n}"
								}
							]
						},
						{
							"name": "Create Folder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"name\": \"abc\" }"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "File Upload",
							"request": {
								"url": {
									"raw": "https://storage.googleapis.com/bitbrew-fota/default/bitbrew-demo/fw-fwFolder/abc?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=large-fota%40bb-hub-01.iam.gserviceaccount.com%2F20201207%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20201207T104253Z&X-Goog-Expires=1800&X-Goog-SignedHeaders=host&X-Goog-Signature=25122eee12bafce31d52fdd584a106816e990343f06c792703cdc22a6ae8fca63166d4b774a8656f0981858fdf291082ea03f1deee762debe8b98ab15353f1d878beef0d2a288c82f68321aa16f4692729489891a9684c5b16be832b0c6d2db78c488f647a92f983dc50b6cefd3705b55654be684a01ac4cad80d5b892ccf18eb81d0823c0e1effafd7bd71a4e05d9958049c6e287053148a01565bc03f25786bbd54a74d5e2ca6fab5f6138e8b0cc5fc494cb58c5deab3e24f74826bcc8edcf5e93ddef2b469f34a350c55f819a8d894a61483d3aa83360e8ca3f5e6567a3c91b980c6bb267f0cced99a1222a18647a959369f8cc3f337b4a3ba27db19b0b40",
									"protocol": "https",
									"host": [
										"storage",
										"googleapis",
										"com"
									],
									"path": [
										"bitbrew-fota",
										"default",
										"bitbrew-demo",
										"fw-fwFolder",
										"abc"
									],
									"query": [
										{
											"key": "X-Goog-Algorithm",
											"value": "GOOG4-RSA-SHA256"
										},
										{
											"key": "X-Goog-Credential",
											"value": "large-fota%40bb-hub-01.iam.gserviceaccount.com%2F20201207%2Fauto%2Fstorage%2Fgoog4_request"
										},
										{
											"key": "X-Goog-Date",
											"value": "20201207T104253Z"
										},
										{
											"key": "X-Goog-Expires",
											"value": "1800"
										},
										{
											"key": "X-Goog-SignedHeaders",
											"value": "host"
										},
										{
											"key": "X-Goog-Signature",
											"value": "25122eee12bafce31d52fdd584a106816e990343f06c792703cdc22a6ae8fca63166d4b774a8656f0981858fdf291082ea03f1deee762debe8b98ab15353f1d878beef0d2a288c82f68321aa16f4692729489891a9684c5b16be832b0c6d2db78c488f647a92f983dc50b6cefd3705b55654be684a01ac4cad80d5b892ccf18eb81d0823c0e1effafd7bd71a4e05d9958049c6e287053148a01565bc03f25786bbd54a74d5e2ca6fab5f6138e8b0cc5fc494cb58c5deab3e24f74826bcc8edcf5e93ddef2b469f34a350c55f819a8d894a61483d3aa83360e8ca3f5e6567a3c91b980c6bb267f0cced99a1222a18647a959369f8cc3f337b4a3ba27db19b0b40"
										}
									],
									"variable": []
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": ""
									}
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete File",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/firmwareFolders/fwFolder/files/fwFile",
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Device Firmware Folder",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/firmwareFolders/fwFolder",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Device Firmware Folders",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/firmwareFolders",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "UnasignFirmwareFolder",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/devices/:DeviceID/brokers/DanlawTcp",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"devices",
										":DeviceID",
										"brokers",
										"DanlawTcp"
									],
									"query": [],
									"variable": [
										{
											"key": "DeviceID",
											"value": "1"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n    \"firmwareFolderName\":\"fwFolder\",\n    \"imei\":\"1\",\n    \"type\":\"DanlawTcp\"\n    }"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Metrics Ops",
					"description": "",
					"item": [
						{
							"name": "Actions - device",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/metrics/actions?from=-1day&interval=1hour&until=-20hours&deviceId=1",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"metrics",
										"actions"
									],
									"query": [
										{
											"key": "from",
											"value": "-1day"
										},
										{
											"key": "interval",
											"value": "1hour"
										},
										{
											"key": "until",
											"value": "-20hours"
										},
										{
											"key": "deviceId",
											"value": "1"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Actions",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/metrics/actions?from=-1day&interval=1hour&until=-20hours",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"metrics",
										"actions"
									],
									"query": [
										{
											"key": "from",
											"value": "-1day"
										},
										{
											"key": "interval",
											"value": "1hour"
										},
										{
											"key": "until",
											"value": "-20hours"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Events",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/metrics/events?from=-7day&interval=1day",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"metrics",
										"events"
									],
									"query": [
										{
											"key": "from",
											"value": "-7day"
										},
										{
											"key": "interval",
											"value": "1day"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Events - device",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/metrics/events?from=-14day&interval=1day&deviceId={{deviceId}}",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"metrics",
										"events"
									],
									"query": [
										{
											"key": "from",
											"value": "-14day"
										},
										{
											"key": "interval",
											"value": "1day"
										},
										{
											"key": "deviceId",
											"value": "{{deviceId}}"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Tenant Ops",
					"description": "",
					"item": [
						{
							"name": "Get Tenant List",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": [
								{
									"id": "ef6574ea-685c-400b-af75-24cb639602c0",
									"name": "Get Tenant List| With 200 OK",
									"originalRequest": {
										"url": "{{protocol}}{{url}}{{port}}/v1/tenants",
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Dec 2020 10:08:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "18935"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit958-brew\",\n        \"properName\": \"BitbrewTenant958\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"test-bigtable\",\n        \"properName\": \"Tenant Name\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"transurban\",\n        \"properName\": \"Transurban RUC LLC\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"ani\",\n        \"properName\": \"Anakin Skywalker\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bb8-2\",\n        \"properName\": \"BB8 Ingestion Test 2\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant277\",\n        \"properName\": \"tenant760\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit135-brew\",\n        \"properName\": \"BitbrewTenant135\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"emtec\",\n        \"properName\": \"Emtec\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tollaid\",\n        \"properName\": \"Tollaid\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant766\",\n        \"properName\": \"tenant471\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"dtil\",\n        \"properName\": \"Danlaw Technologies India Limited\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant962\",\n        \"properName\": \"tenant906\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"sppvm551\",\n        \"properName\": \"BitbrewTenantsppvm551\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit38-brew\",\n        \"properName\": \"BitbrewTenant38\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant963\",\n        \"properName\": \"tenant049\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant218\",\n        \"properName\": \"tenant071\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"concirrus\",\n        \"properName\": \"Concirrus\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit109-brew\",\n        \"properName\": \"BitbrewTenant109\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant819\",\n        \"properName\": \"tenant011\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant683\",\n        \"properName\": \"tenant377\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant694\",\n        \"properName\": \"tenant976\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"mitsubishi\",\n        \"properName\": \"Mitsubishi Electric\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant567\",\n        \"properName\": \"tenant305\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"keatech\",\n        \"properName\": \"Keatech\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit316-brew\",\n        \"properName\": \"BitbrewTenant316\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant284\",\n        \"properName\": \"tenant274\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant084\",\n        \"properName\": \"tenant388\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit8065-brew\",\n        \"properName\": \"BitbrewTenant8065\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant649\",\n        \"properName\": \"tenant511\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"carma-car\",\n        \"properName\": \"Carma Car\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant806\",\n        \"properName\": \"tenant692\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"comodif\",\n        \"properName\": \"Comodif\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant283\",\n        \"properName\": \"tenant977\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit829-brew\",\n        \"properName\": \"BitbrewTenant829\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"rymvv821\",\n        \"properName\": \"BitbrewTenantrymvv821\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit100-brew\",\n        \"properName\": \"BitbrewTenant100\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"holman\",\n        \"properName\": \"Holman\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"uyorx907\",\n        \"properName\": \"BitbrewTenantuyorx907\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"mariostest\",\n        \"properName\": \"Mario Test\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant642\",\n        \"properName\": \"tenant128\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant661\",\n        \"properName\": \"tenant185\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit3512-brew\",\n        \"properName\": \"BitbrewTenant3512\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit5834-brew\",\n        \"properName\": \"BitbrewTenant5834\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"it-consol\",\n        \"properName\": \"IT Consol\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"insurtech\",\n        \"properName\": \"Insurtech\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant611\",\n        \"properName\": \"tenant682\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant574\",\n        \"properName\": \"tenant407\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant393\",\n        \"properName\": \"tenant574\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit20-brew\",\n        \"properName\": \"BitbrewTenant20\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant678\",\n        \"properName\": \"tenant798\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"nszuz108\",\n        \"properName\": \"BitbrewTenantnszuz108\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant726\",\n        \"properName\": \"tenant321\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant972\",\n        \"properName\": \"tenant344\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit1992-brew\",\n        \"properName\": \"BitbrewTenant1992\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant245\",\n        \"properName\": \"tenant891\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"monterrey-university\",\n        \"properName\": \"Monterrey University\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"beamlive\",\n        \"properName\": \"beamLive, Inc.\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant568\",\n        \"properName\": \"tenant516\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"jims-testing\",\n        \"properName\": \"Jim's Testing\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit7093-brew\",\n        \"properName\": \"BitbrewTenant7093\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"production\",\n        \"properName\": \"Production Test\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit2954-brew\",\n        \"properName\": \"BitbrewTenant2954\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant756\",\n        \"properName\": \"tenant798\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"santa-carolina-three\",\n        \"properName\": \"Santa Carolina Three\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant401\",\n        \"properName\": \"tenant633\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit6312-brew\",\n        \"properName\": \"BitbrewTenant6312\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"test-1-18-validation\",\n        \"properName\": \"Validating the 1.18.0 release\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant203\",\n        \"properName\": \"tenant663\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"e2e-tenant\",\n        \"properName\": \"E2E Test Tenant\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant713\",\n        \"properName\": \"tenant004\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant885\",\n        \"properName\": \"tenant119\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit7522-brew\",\n        \"properName\": \"BitbrewTenant7522\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"devops-smoke-test-ben\",\n        \"properName\": \"devops test devops-smoke-test-ben\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant549\",\n        \"properName\": \"tenant311\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"e2e-tester\",\n        \"properName\": \"E2E Tester Tenant\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant608\",\n        \"properName\": \"tenant202\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant231\",\n        \"properName\": \"tenant880\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"pitstop\",\n        \"properName\": \"Pitstop\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"lrdvader\",\n        \"properName\": \"Darth Vader\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit763-brew\",\n        \"properName\": \"BitbrewTenant763\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tuqyp397\",\n        \"properName\": \"BitbrewTenanttuqyp397\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant344\",\n        \"properName\": \"tenant864\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bb8-4\",\n        \"properName\": \"BB8 Ingestion Test 4\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant248\",\n        \"properName\": \"tenant958\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant945\",\n        \"properName\": \"tenant255\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"nmuyn375\",\n        \"properName\": \"BitbrewTenantnmuyn375\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"avis\",\n        \"properName\": \"Avis\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit645-brew\",\n        \"properName\": \"BitbrewTenant645\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant464\",\n        \"properName\": \"tenant342\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"vw-mx\",\n        \"properName\": \"Volkswagen Mexico\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenantch7s\",\n        \"properName\": \"BitbrewTenant9491\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant858\",\n        \"properName\": \"tenant374\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"roush\",\n        \"properName\": \"Roush\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"ryrmz248\",\n        \"properName\": \"BitbrewTenantryrmz248\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant141\",\n        \"properName\": \"tenant915\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"pzsoy301\",\n        \"properName\": \"BitbrewTenantpzsoy301\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"e2e-aws-tenant\",\n        \"properName\": \"E2E AWS Tenant\"\n    },\n    {\n        \"enabled\": false,\n        \"ingestionClusterId\": 1,\n        \"name\": \"iungo\",\n        \"properName\": \"Iungo\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant687\",\n        \"properName\": \"tenant027\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant761\",\n        \"properName\": \"tenant035\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit75-brew\",\n        \"properName\": \"BitbrewTenant75\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"elastic-m2m\",\n        \"properName\": \"Elastic M2M\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant572\",\n        \"properName\": \"tenant035\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bb8-3\",\n        \"properName\": \"BB8 Ingestion Test 3\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"therealdealcars\",\n        \"properName\": \"The Real Deal Cars\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bb8\",\n        \"properName\": \"BB8 Public\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"girdharshubham\",\n        \"properName\": \"Shubham Girdhar\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bulk-device-1\",\n        \"properName\": \"Bulk Device 1\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit2887-brew\",\n        \"properName\": \"BitbrewTenant2887\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"psnwq977\",\n        \"properName\": \"BitbrewTenantpsnwq977\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"nvuyt516\",\n        \"properName\": \"BitbrewTenantnvuyt516\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant093\",\n        \"properName\": \"tenant595\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant222\",\n        \"properName\": \"tenant783\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"clearroad\",\n        \"properName\": \"ClearRoad\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant023\",\n        \"properName\": \"tenant241\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"onboarding-aws-tenant\",\n        \"properName\": \"Runscope test tenant\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"vxnvm878\",\n        \"properName\": \"BitbrewTenantvxnvm878\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant438\",\n        \"properName\": \"tenant439\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 2,\n        \"name\": \"liberty\",\n        \"properName\": \"Liberty Mutual\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"device-health-jobs\",\n        \"properName\": \"Device Health Jobs\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant715\",\n        \"properName\": \"tenant059\"\n    },\n    {\n        \"enabled\": false,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bitbrew-demo\",\n        \"properName\": \"Peak Telematix\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"prqvq456\",\n        \"properName\": \"BitbrewTenantprqvq456\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"eon\",\n        \"properName\": \"E.ON\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant365\",\n        \"properName\": \"tenant733\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant379\",\n        \"properName\": \"tenant963\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant739\",\n        \"properName\": \"tenant453\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"mvvnz789\",\n        \"properName\": \"BitbrewTenantmvvnz789\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant057\",\n        \"properName\": \"tenant067\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"azuga\",\n        \"properName\": \"Azuga\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant935\",\n        \"properName\": \"tenant196\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"wsp\",\n        \"properName\": \"WSP USA Inc.\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit246-brew\",\n        \"properName\": \"BitbrewTenant246\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"mahindra-test\",\n        \"properName\": \"Mahindra Test\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant797\",\n        \"properName\": \"tenant540\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit21-brew\",\n        \"properName\": \"BitbrewTenant21\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant390\",\n        \"properName\": \"tenant602\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit188-brew\",\n        \"properName\": \"BitbrewTenant188\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant571\",\n        \"properName\": \"tenant458\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit1840-brew\",\n        \"properName\": \"BitbrewTenant1840\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit51-brew\",\n        \"properName\": \"BitbrewTenant51\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"intermedia\",\n        \"properName\": \"Intermedia\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"ntymo188\",\n        \"properName\": \"BitbrewTenantntymo188\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"uvrt\",\n        \"properName\": \"UV Research & Technology\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant857\",\n        \"properName\": \"tenant024\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"roadbscore\",\n        \"properName\": \"Road B Score\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant442\",\n        \"properName\": \"tenant535\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant714\",\n        \"properName\": \"tenant592\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"device-import-testing\",\n        \"properName\": \"Device Import Testing\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"vmtpo255\",\n        \"properName\": \"BitbrewTenantvmtpo255\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit26-brew\",\n        \"properName\": \"BitbrewTenant26\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"connected-car\",\n        \"properName\": \"Connected Car\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 2,\n        \"name\": \"liberty-prod\",\n        \"properName\": \"Liberty Production\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit127-brew\",\n        \"properName\": \"BitbrewTenant127\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"danlaw\",\n        \"properName\": \"Danlaw\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"ronqn606\",\n        \"properName\": \"BitbrewTenantronqn606\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"xyqut613\",\n        \"properName\": \"BitbrewTenantxyqut613\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant521\",\n        \"properName\": \"tenant273\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant669\",\n        \"properName\": \"tenant867\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit895-brew\",\n        \"properName\": \"BitbrewTenant895\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bitbrew\",\n        \"properName\": \"devops test bitbrew\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant232\",\n        \"properName\": \"tenant424\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant440\",\n        \"properName\": \"tenant907\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"superbitbrew\",\n        \"properName\": \"superbitbrew\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant870\",\n        \"properName\": \"tenant425\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"shiftmobility\",\n        \"properName\": \"SHIFTMobility\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"peak\",\n        \"properName\": \"Peak Telematics\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"verisk\",\n        \"properName\": \"Verisk\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit116-brew\",\n        \"properName\": \"BitbrewTenant116\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"four-ai\",\n        \"properName\": \"4.0 Analytics\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"qzsno617\",\n        \"properName\": \"BitbrewTenantqzsno617\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant152\",\n        \"properName\": \"tenant147\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"driven-analytics\",\n        \"properName\": \"Driven Analytics\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit2172-brew\",\n        \"properName\": \"BitbrewTenant2172\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"mad-max\",\n        \"properName\": \"MadMax IoT\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bb8-5\",\n        \"properName\": \"BB8 Ingestion Test 5\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bitbrew-demo1\",\n        \"properName\": \"bitbrew-demo1\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant353\",\n        \"properName\": \"tenant156\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"oyvuq662\",\n        \"properName\": \"BitbrewTenantoyvuq662\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"es-test-run-1\",\n        \"properName\": \"ES Test Run 1\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant930\",\n        \"properName\": \"tenant897\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 2,\n        \"name\": \"bb8-private\",\n        \"properName\": \"BB8 Private\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant702\",\n        \"properName\": \"tenant683\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"shiftride\",\n        \"properName\": \"ShiftRide\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant613\",\n        \"properName\": \"tenant960\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant718\",\n        \"properName\": \"tenant394\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"oyuqt904\",\n        \"properName\": \"BitbrewTenantoyuqt904\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit69-brew\",\n        \"properName\": \"Peak Telematix\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant155\",\n        \"properName\": \"tenant715\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"nouws410\",\n        \"properName\": \"BitbrewTenantnouws410\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"shubhamgirdhar\",\n        \"properName\": \"Shubham Girdhar\"\n    },\n    {\n        \"enabled\": false,\n        \"ingestionClusterId\": 1,\n        \"name\": \"vivint\",\n        \"properName\": \"Vivint\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bitbrew-deo1\",\n        \"properName\": \"bitbrew-deo1\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"cox2m\",\n        \"properName\": \"Cox2M\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"gorilla-desk\",\n        \"properName\": \"Gorilla Desk\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"lrdvdr\",\n        \"properName\": \"Lord Vader\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant829\",\n        \"properName\": \"tenant827\"\n    },\n    {\n        \"enabled\": false,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bitbrew-docs\",\n        \"properName\": \"BitBrew Docs\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"caarmo\",\n        \"properName\": \"Caarmo\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant147\",\n        \"properName\": \"tenant702\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit191-brew\",\n        \"properName\": \"BitbrewTenant191\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"revdapp\",\n        \"properName\": \"RevdApp\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant281\",\n        \"properName\": \"tenant431\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant623\",\n        \"properName\": \"tenant206\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"pwows768\",\n        \"properName\": \"BitbrewTenantpwows768\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"bit5951-brew\",\n        \"properName\": \"BitbrewTenant5951\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant840\",\n        \"properName\": \"tenant755\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant982\",\n        \"properName\": \"tenant544\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"ttpxm639\",\n        \"properName\": \"BitbrewTenantttpxm639\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant597\",\n        \"properName\": \"tenant083\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"tenant645\",\n        \"properName\": \"tenant200\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"devops-smoke-test\",\n        \"properName\": \"devops test devops-smoke-test\"\n    },\n    {\n        \"enabled\": false,\n        \"ingestionClusterId\": 1,\n        \"name\": \"crabi\",\n        \"properName\": \"Crabi\"\n    },\n    {\n        \"enabled\": true,\n        \"ingestionClusterId\": 1,\n        \"name\": \"shubham\",\n        \"properName\": \"Shubham Girdhar\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get Tenant Info",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Tenant",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"tenantId\",\n    \"properName\": \"Tenant Name\",\n    \"enabled\": true\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Tenant Details",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"properName\": \"Peak Telematix\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Remove  Tenant",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Disable Tenant",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/disable",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Enable Tenant",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/enable",
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Activity Log",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/activitylog/from/2017-08-01/to/2017-08-01",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Activity Log, via uuid",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/activitylog/from/f4508200-3df9-11eb-8080-808080808080/to/35ac8b8f-3ec2-11eb-7f7f-7f7f7f7f7f7f",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Activity Log (Admin)",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/admin/activitylog?from=2020-03-21&to=2020-05-21&tenantId=-1",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"admin",
										"activitylog"
									],
									"query": [
										{
											"key": "from",
											"value": "2020-03-21"
										},
										{
											"key": "to",
											"value": "2020-05-21"
										},
										{
											"key": "tenantId",
											"value": "-1"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "User Auth",
					"description": "",
					"item": [
						{
							"name": "Get Access Token (app)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"token\", jsonData.accessToken);",
											"tests[\"Token Set\"] = jsonData.accessToken === postman.getEnvironmentVariable(\"token\");"
										]
									}
								}
							],
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/token",
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "a7ea473b-24b6-43d8-b6df-d3a8d2313ca1",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "MGVhYjNhYTgtYmY5Zi00Yjg2LWI0ZDItMzU2NTA0NzY3YWE5",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "app",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Access Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"token\", jsonData.accessToken);",
											"tests[\"Token Set\"] = jsonData.accessToken === postman.getEnvironmentVariable(\"token\");"
										]
									}
								}
							],
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/token",
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "",
											"type": "text"
										},
										{
											"key": "password",
											"value": "",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Users (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/users",
								"method": "GET",
								"header": [
									{
										"key": "grant_type",
										"value": "pipo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Users (Tenant)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/users",
								"method": "GET",
								"header": [
									{
										"key": "grant_type",
										"value": "pipo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get User by Email",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/admin/users?email=admin",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"admin",
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "admin"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "grant_type",
										"value": "pipo"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Add User",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/users",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"aladdin@streetrat.com\",\n    \"password\": \"mypassword\",\n    \"role\": \"tenantAdmin\",\n    \"tenantId\": \"bit69-brew\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update User Roles",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/users/{{userId}}/role",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "readOnlyMember"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete User",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/users/d8d5130c-5e00-42b7-8340-945db0e9cc63",
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": [
								{
									"id": "09640557-8931-403b-8e85-16d1ee08ec33",
									"name": "Delete User| With 200 OK",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/admin/users/:userid",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"admin",
												"users",
												":userid"
											],
											"query": [],
											"variable": [
												{
													"key": "userid",
													"value": "bb3621cf-35d6-4228-9ab5-24a5cd682313"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Dec 2020 12:49:42 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "2"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "List Invitations",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/invitations",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Invite User",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/invitations",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Ariel\",\n    \"email\": \"lilmermaid@underthesea.com\",\n    \"role\": \"tenantAdmin\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Verify Invitation",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/invitations/ZjI5ZTgyZGYtY2RmZi00ZDg0LTg5ZTgtYWZjMGMzNGRhODEw",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"lilmermaid@underthesea.com\",\n    \"password\": \"lifeisthebubbles\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Remove Invitation",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/invitations/6b03597d-3ddf-4d73-8dbd-a6d9b6d5c6e8",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Clients (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/clients",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Client (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/clients",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"myClientName\",\n    \"description\": \"optionalDescription\",\n    \"grants\": [\"app\"]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create App Client (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/clients",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"myClientApp\",\n    \"description\": \"optionalDescription\",\n    \"grants\": [\"client_credentials\"],\n    \"scope\": \"app\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Remove Client (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/clients/d5280c3b-7a29-44f2-940e-0f8d01f41089",
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Clients (Tenant)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/clients",
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Client (Tenant)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/clients",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"myClientName\",\n    \"description\": \"optionalDescription\",\n    \"grants\": \"app\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Remove Client (Tenant)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/clients/c2c848f9-0506-4df0-ba0a-dbe23c6c0b5f",
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Roles",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/roles",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Forgot Password",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/password-resets",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"email@provider.net\"}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update User Password",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/password-resets/OGE2N2YxYWYtODFlMi00MGJhLTg3MjAtZDExNTJiYTQwZDhj",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"email\": \"lilmermaid@underthesea.com\",\n   \"newPassword\": \"partofyourworld\"\n}"
								},
								"description": "Change the user's password"
							},
							"response": []
						},
						{
							"name": "Change User Password",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/users/4f838e86-a366-4971-8333-6f0bdd3942e5/password",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "newPassword"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "AMQP Auth",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/amqp/user?username=admin&password=ludington12345",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"amqp",
										"user"
									],
									"query": [
										{
											"key": "username",
											"value": "admin"
										},
										{
											"key": "password",
											"value": "ludington12345"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Email HMAC",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/email-hmac",
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Destination Ops",
					"description": "",
					"item": [
						{
							"name": "Test",
							"description": "",
							"item": [
								{
									"name": "Test Webhook Destination",
									"request": {
										"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/destination/webhook",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"uri\": \"https://enyvolxl770mf.x.pipedream.net\",\n\t\"payload\": {\n\t\t\"key\": \"value\"\n\t}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Test BigTable Destination",
									"request": {
										"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/destination/bigtable",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"destinationId\": \"78da1c63-73d6-4e24-88f0-976088ab1a54\",\n\t\"payload\": {\n\t\t\"key\": \"value\"\n\t}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Test Keen Destination",
									"request": {
										"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/destination/keen",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"destinationId\": \"cf78f959-e5da-4fc9-8cc3-aa948866a7f6\",\n\t\"payload\": {\n\t\t\"key\": \"value\"\n\t}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Test DynamoDb Destination",
									"request": {
										"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/destination/dynamodb",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"destinationId\": \"cf78f959-e5da-4fc9-8cc3-aa948866a7f6\",\n\t\"payload\": {\n\t\t\"key\": \"value\"\n\t}\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Test Amqp Destination",
									"request": {
										"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/destination/amqp",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"queue\": \"AllEvents\",\n\t\"payload\": {\n\t\t\"key\": \"value\"\n\t}\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "List All Destinations",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/15c5211b-8805-4fc2-9d41-5ff7517f27af",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Destination Errors",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/15c5211b-8805-4fc2-9d41-5ff7517f27af/errors?from=2020-12-01T20:00:00z&to=2020-12-01T21:00:00z&pageNo=1&pageSize=100",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"destinations",
										"15c5211b-8805-4fc2-9d41-5ff7517f27af",
										"errors"
									],
									"query": [
										{
											"key": "from",
											"value": "2020-12-01T20:00:00z"
										},
										{
											"key": "to",
											"value": "2020-12-01T21:00:00z"
										},
										{
											"key": "pageNo",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "100"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "View Destination Status",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/558d2830-a6b2-490c-9d5c-d0d6e26021ef/status",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Webhook Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/webhook/15c5211b-8805-4fc2-9d41-5ff7517f27af",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"my-webhook-destination\",\n  \"url\": \"http://example.com\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Bigtable Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/bigtable/15c5211b-8805-4fc2-9d41-5ff7517f27af",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"my-bigtable-destination\",\n  \"instanceId\": \"first-test\",\n  \"tableName\": \"tableName\",\n  \"cloudJson\": {\n\t  \"type\": \"service_account\",\n\t  \"project_id\": \"bigtable-testing-184714\",\n\t  \"private_key_id\": \"62ccd61bf47eb3f2ecd6af766f6562f475d362e2\",\n\t  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDPmpjRkX/WnpMP\\nn+T6PXM0pUAawChxBEHUISVaFqOnkccLxzfNJ3r/BZ0E2GJS3+tPjoj7s33DCNXb\\nqePuaEqFJ7JtPVHGNzMOTsRk9cj1i/j7AWtBj9FzYoFr9OCGMXsq3WixGrmxIsvN\\nRL1cgTU12zFd8pxot1XNIyBHKaHB+U7/bKCYogFT970/DSU2jcO9zw57oKrxxJEG\\nRmNZclJk+FIY9Na0a1Twl6B3e09ZxOPB8JmAbjKOX0KmRQUBImbCTlanvPC2+Cwn\\njZEMSO+ehgf02aQ9Ug0RAMGi30/XS93FBGPm46fGP1dLmvHUBk8h0T07k1PeTCOJ\\nWR4FAWKDAgMBAAECggEAXtKwJlic2XyIk0RnI91Zd5xbEVzfm+9j2e5hzyo0Cd/N\\n2JVf6Xa0+TKpK4NiNZRNOINUEhNDyAeLFtAcadJ85yDgoIC3jx+7VDeqAKs65NzQ\\nFmXphYKZGmjN0G+C9gg3x7ZlkS8xzbSk/db93vitQzIg9FZSFopWyGHY5mgfmCbi\\nz42lxGCOntraDTY37C9txArq/3RHBkq/GwiU5fOXztwNw3tBs1hhjsU8gaxR8hzX\\nxdWht1a6MdElmZ+jRxYVfgKRVguXftogbFuqi/v4JpWOsUTPwF+oMiB+MzxcgXGg\\n70kohSkSTFL2LhemUMGhXAsBg6rMC6lpsGZqtk6DMQKBgQDpUAPPbq1+yg2Xsn3s\\nNfzEmYAXNzyzOEIylO7sCYRNPc/8883McXZjPOhf2azhatJyllsjNEx6ZYDumFNY\\nCMnB4q99Ck7gE1HedNoHHjKcyRVg0yRgSKp1ySmMjrYK9kTLMnvlOIr7cUGcGMCM\\n7i/uu2g4Hd4Se7QOfWDxoEckzQKBgQDjypnyRxBY4LByNcC62sV9eorfkxOSyY4X\\nK8f6jIatkzlCsY2NmazF/ZXgNXaNAhjb+xTF8ZyrRoQOjZmUsWLQ7vIIqeQbDU5c\\nApyg3rBdG9OkQEcWhDuxMgs8XhTHw0PXQ5Q2g+oDVGG3+VmUBEQzxxkChwz8XYks\\nPeVdxHMkjwKBgQDOct4cQ/xDb/kdHXUtegwjzww3/sm4cHSrG3xa4oTucF7Fntqh\\nKFkwsOmSPyQqBwMXIBKfER0HRSAUgDdnc8dLyBGu3Fs1DgNojA+NMtxoPcqr9cl/\\nZW1ocktQs8tD4ey3vQFCsIjSu8HppUFkszM41R4AYfVqd4m5NJp+1Gt/lQKBgQCc\\ngN9iQQbvOXihD2NaPeLAAkiVsTQaftZb/x2He7MwYF1QADM0HWhCI6csgy7vVIiF\\n4yzzjrvIRUuHwCvLqFAvImwyHZ92Ip86wiSgtj9PyUWQrQTqaHGmna5wjGcUlIjw\\nxiJ3jgxiuz/kKbIs6v184YbCYM1AOnd7aQ9EbCt76wKBgQDg6kALukpDc4TqF0o3\\nkUfb3bCQa706U9c2tr9j1CaTSFstmhEcg35SOM98RwJBfWlNisS+5cuvOl+dlTxA\\nMVR2FfwImT2xYxMBoV+2FZQKy0Efg2GANtaVYX+y7M8j4D8aStHcjpcjNn0HBqWb\\ngeT8dzQHmTCNQa9hLfDOX6o4fQ==\\n-----END PRIVATE KEY-----\\n\",\n\t  \"client_email\": \"example@bigtable-testing-184714.iam.gserviceaccount.com\",\n\t  \"client_id\": \"114420640089344752395\",\n\t  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n\t  \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n\t  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n\t  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/example%40bigtable-testing-184714.iam.gserviceaccount.com\"\n  }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Keen Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/keen/db6054c3-64e7-48df-bf97-5b3c6c6aecaf",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"my-keen-destination\",\n  \"keenProjectId\": \"59e64b84c9e77c00015738f9\",\n  \"keenWriteKey\": \"CEBD4E9945D1302F37919E6534DF321ABCE3F6340B09E60471281490767729081279FF2A772A869451ED8AD8CBD0243B3017D64FD16CA0F30A022C8950965070FB261D406D9AC4896F4FCF95F02A97CAAD908E8B55F8BF129C892D3B460815C\",\n  \"keenEventCollection\": \"streamName\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update DynamoDb Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/dynamodb/15c5211b-8805-4fc2-9d41-5ff7517f27af",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"my-dynamo-destination\",\n  \"awsClientId\": \"Ar3F2dH7Egr3\",\n  \"awsClientSecret\": \"sY4hRgi4EhY2In\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create DynamoDb Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/dynamodb",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"my-dynamo-destination\",\n  \"awsClientId\": \"Ar3F2dH7Egr3\",\n  \"awsClientSecret\": \"sY4hRgi4EhY2In\",\n  \"awsRegion\": \"us-east-2\",\n  \"tableName\": \"table-name\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Keen Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/keen",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"my-keen-destination\",\n  \"keenProjectId\": \"59e64b84c9e77c00015738f9\",\n  \"keenWriteKey\": \"CEBD4E9945D1302F37919E6534DF321ABCE3F6340B09E60471281490767729081279FF2A772A869451ED8AD8CBD0243B3017D64FD16CA0F30A022C8950965070FB261D406D9AC4896F4FCF95F02A97CAAD908E8B55F8BF129C892D3B460815C\",\n  \"keenEventCollection\": \"streamName\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Bigtable Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/bigtable",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"my-bigtable-destination\",\n  \"instanceId\": \"first-test\",\n  \"tableName\": \"tableName\",\n  \"cloudJson\": {\n\t  \"type\": \"service_account\",\n\t  \"project_id\": \"bigtable-testing-184714\",\n\t  \"private_key_id\": \"62ccd61bf47eb3f2ecd6af766f6562f475d362e2\",\n\t  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDPmpjRkX/WnpMP\\nn+T6PXM0pUAawChxBEHUISVaFqOnkccLxzfNJ3r/BZ0E2GJS3+tPjoj7s33DCNXb\\nqePuaEqFJ7JtPVHGNzMOTsRk9cj1i/j7AWtBj9FzYoFr9OCGMXsq3WixGrmxIsvN\\nRL1cgTU12zFd8pxot1XNIyBHKaHB+U7/bKCYogFT970/DSU2jcO9zw57oKrxxJEG\\nRmNZclJk+FIY9Na0a1Twl6B3e09ZxOPB8JmAbjKOX0KmRQUBImbCTlanvPC2+Cwn\\njZEMSO+ehgf02aQ9Ug0RAMGi30/XS93FBGPm46fGP1dLmvHUBk8h0T07k1PeTCOJ\\nWR4FAWKDAgMBAAECggEAXtKwJlic2XyIk0RnI91Zd5xbEVzfm+9j2e5hzyo0Cd/N\\n2JVf6Xa0+TKpK4NiNZRNOINUEhNDyAeLFtAcadJ85yDgoIC3jx+7VDeqAKs65NzQ\\nFmXphYKZGmjN0G+C9gg3x7ZlkS8xzbSk/db93vitQzIg9FZSFopWyGHY5mgfmCbi\\nz42lxGCOntraDTY37C9txArq/3RHBkq/GwiU5fOXztwNw3tBs1hhjsU8gaxR8hzX\\nxdWht1a6MdElmZ+jRxYVfgKRVguXftogbFuqi/v4JpWOsUTPwF+oMiB+MzxcgXGg\\n70kohSkSTFL2LhemUMGhXAsBg6rMC6lpsGZqtk6DMQKBgQDpUAPPbq1+yg2Xsn3s\\nNfzEmYAXNzyzOEIylO7sCYRNPc/8883McXZjPOhf2azhatJyllsjNEx6ZYDumFNY\\nCMnB4q99Ck7gE1HedNoHHjKcyRVg0yRgSKp1ySmMjrYK9kTLMnvlOIr7cUGcGMCM\\n7i/uu2g4Hd4Se7QOfWDxoEckzQKBgQDjypnyRxBY4LByNcC62sV9eorfkxOSyY4X\\nK8f6jIatkzlCsY2NmazF/ZXgNXaNAhjb+xTF8ZyrRoQOjZmUsWLQ7vIIqeQbDU5c\\nApyg3rBdG9OkQEcWhDuxMgs8XhTHw0PXQ5Q2g+oDVGG3+VmUBEQzxxkChwz8XYks\\nPeVdxHMkjwKBgQDOct4cQ/xDb/kdHXUtegwjzww3/sm4cHSrG3xa4oTucF7Fntqh\\nKFkwsOmSPyQqBwMXIBKfER0HRSAUgDdnc8dLyBGu3Fs1DgNojA+NMtxoPcqr9cl/\\nZW1ocktQs8tD4ey3vQFCsIjSu8HppUFkszM41R4AYfVqd4m5NJp+1Gt/lQKBgQCc\\ngN9iQQbvOXihD2NaPeLAAkiVsTQaftZb/x2He7MwYF1QADM0HWhCI6csgy7vVIiF\\n4yzzjrvIRUuHwCvLqFAvImwyHZ92Ip86wiSgtj9PyUWQrQTqaHGmna5wjGcUlIjw\\nxiJ3jgxiuz/kKbIs6v184YbCYM1AOnd7aQ9EbCt76wKBgQDg6kALukpDc4TqF0o3\\nkUfb3bCQa706U9c2tr9j1CaTSFstmhEcg35SOM98RwJBfWlNisS+5cuvOl+dlTxA\\nMVR2FfwImT2xYxMBoV+2FZQKy0Efg2GANtaVYX+y7M8j4D8aStHcjpcjNn0HBqWb\\ngeT8dzQHmTCNQa9hLfDOX6o4fQ==\\n-----END PRIVATE KEY-----\\n\",\n\t  \"client_email\": \"example@bigtable-testing-184714.iam.gserviceaccount.com\",\n\t  \"client_id\": \"114420640089344752395\",\n\t  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n\t  \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n\t  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n\t  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/example%40bigtable-testing-184714.iam.gserviceaccount.com\"\n  }\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Webhook Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/webhook",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"my-webhook-destination\",\n  \"url\": \"http://example.com\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/558d2830-a6b2-490c-9d5c-d0d6e26021ef",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Reset Destination",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/8e2af040-0ad6-4fe3-90b1-0645cdf95df7/resets",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": [
								{
									"id": "b8940071-1d50-45c1-92a3-f8204ecd5236",
									"name": "Reset Destination|With 200 OK",
									"originalRequest": {
										"url": {
											"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/destinations/:destinationid/resets",
											"host": [
												"{{protocol}}{{url}}{{port}}"
											],
											"path": [
												"v1",
												"tenants",
												"{{tenantId}}",
												"destinations",
												":destinationid",
												"resets"
											],
											"query": [],
											"variable": [
												{
													"key": "destinationid",
													"value": "8e2af040-0ad6-4fe3-90b1-0645cdf95df7"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"_postman_previewtype": "html",
									"header": [
										{
											"key": "Server",
											"value": "akka-http/10.1.7"
										},
										{
											"key": "Date",
											"value": "Wed, 16 Dec 2020 06:10:56 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "2"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "clear"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Trip and Drive Ops",
					"description": "",
					"item": [
						{
							"name": "List Trips (Tenant)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/trips",
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Trips (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/test/trips",
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Trip (Tenant)",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/trips/:tripid",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"test",
										"trips",
										":tripid"
									],
									"query": [],
									"variable": [
										{
											"key": "tripid",
											"value": ""
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete Trip (Tenant)",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/trips/:tripid",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"test",
										"trips",
										":tripid"
									],
									"query": [],
									"variable": [
										{
											"key": "tripid",
											"value": ""
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Trip (Tenant)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"trip-id\", jsonData.id);",
											"tests[\"Trip ID Set\"] = jsonData.id === postman.getEnvironmentVariable(\"trip-id\");"
										]
									}
								}
							],
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/trips",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"trip-name\",\n\t\"description\": \"trip-description\",\n\t\"events\": [\n\t\t{\n    \t\t\"eventBody\": {\n        \t\t\"tripNumber\": 76,\n        \t\t\"pidData\": {\n        \t\t\t\"EngineRpm\": 1410,\n        \t\t\t\"VehicleSpeed\": 45\n        \t\t}\n    \t\t},\n    \t\t\"eventType\": \"TcpRelativeTimeTripData\",\n    \t\t\"timestampOffset\": 0\n    \t}\n\t]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Trip (Admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"trip-id\", jsonData.id);",
											"tests[\"Trip ID Set\"] = jsonData.id === postman.getEnvironmentVariable(\"trip-id\");"
										]
									}
								}
							],
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/test/trips",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"trip-name\",\n\t\"description\": \"trip-description\",\n\t\"events\": [\n\t\t{\n    \t\t\"eventBody\": {\n        \t\t\"tripNumber\": 76,\n        \t\t\"pidData\": {\n        \t\t\t\"EngineRpm\": 1410,\n        \t\t\t\"VehicleSpeed\": 45\n        \t\t}\n    \t\t},\n    \t\t\"eventType\": \"TcpRelativeTimeTripData\",\n    \t\t\"timestampOffset\": 0\n    \t}\n\t]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Drive",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"drive-id\", jsonData.id);",
											"tests[\"Drive ID Set\"] = jsonData.id === postman.getEnvironmentVariable(\"drive-id\");"
										]
									}
								}
							],
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/drives",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"tripId\": \"{{trip-id}}\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "List Drives",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/drives",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Trip (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/test/trips/{{trip-id}}",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete Trip (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/trips/{{trip-id}}",
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Trip (Admin)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/admin/test/trips/{{trip-id}}",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"trip-name\",\n\t\"description\": \"trip-description\",\n\t\"events\": [\n\t\t{\n    \t\t\"eventBody\": {\n        \t\t\"tripNumber\": 76,\n        \t\t\"pidData\": {\n        \t\t\t\"EngineRpm\": 1410,\n        \t\t\t\"VehicleSpeed\": 45\n        \t\t}\n    \t\t},\n    \t\t\"eventType\": \"TcpRelativeTimeTripData\",\n    \t\t\"timestampOffset\": 0\n    \t}\n\t]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get Drive",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/drives/{{drive-id}}",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Update Trip (Tenant)",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/test/trips/{{trip-id}}",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"trip-name\",\n\t\"description\": \"trip-description\",\n\t\"events\": [\n\t\t{\n    \t\t\"eventBody\": {\n        \t\t\"tripNumber\": 76,\n        \t\t\"pidData\": {\n        \t\t\t\"EngineRpm\": 1410,\n        \t\t\t\"VehicleSpeed\": 45\n        \t\t}\n    \t\t},\n    \t\t\"eventType\": \"TcpRelativeTimeTripData\",\n    \t\t\"timestampOffset\": 0\n    \t}\n\t]\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Amqp Credentials",
					"description": "",
					"item": [
						{
							"name": "Get Credentials",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/amqp-credentials",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Create Credential",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/amqp-credentials",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"amqp-credential\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete Credential",
							"request": {
								"url": {
									"raw": "{{protocol}}{{url}}{{port}}/v1/tenants/{{tenantId}}/amqp-credentials/0e2f35e6-b764-4239-8012-8b0fcc9ccb33:id?=0e2f35e6-b764-4239-8012-8b0fcc9ccb33",
									"host": [
										"{{protocol}}{{url}}{{port}}"
									],
									"path": [
										"v1",
										"tenants",
										"{{tenantId}}",
										"amqp-credentials",
										"0e2f35e6-b764-4239-8012-8b0fcc9ccb33:id"
									],
									"query": [
										{
											"key": "",
											"value": "0e2f35e6-b764-4239-8012-8b0fcc9ccb33"
										}
									],
									"variable": []
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Message of the Day",
					"description": "",
					"item": [
						{
							"name": "Get Message of the Day",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/motd",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Set Message of the Day",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/motd",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"date\": \"A nice date string like 'October 21, 2019 8pm to 8.30pm\",\n\t\"url\": \"https://some-more-info.com\",\n\t\"message\": \"A nice message describing how the system will be down for maintenance at 8pm\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete Message of the Day",
							"request": {
								"url": "{{protocol}}{{url}}{{port}}/v1/motd",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Version(remove)",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/version",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/health",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Services",
			"description": "",
			"item": [
				{
					"name": "Version",
					"request": {
						"url": "http://{{servicesUrl}}:{{servicesPort}}/v1/version",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"url": "http://{{servicesUrl}}:{{servicesPort}}/v1/health",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Testing",
			"description": "",
			"item": [
				{
					"name": "Get Simulation Status",
					"request": {
						"url": "http://localhost:9000/v1/simulation/status",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Alex GPS",
					"request": {
						"url": "http://mesos_slave_azuga_web-us-east-1-staging-danlaw.hub.bitbrew.com:9000/tripdata/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"notificationType\": \"gps\",\n \"deviceId\": \"deviceID\",\n \"data\": {\n   \"latitude\": 46.497,\n   \"longitude\": 20.0402,\n   \"heading\": 360\n }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "VTS GPS sample",
					"request": {
						"url": "http://vtsdev.danlawinc.com/api/GPS/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"notificationType\": \"gps\",\n \"deviceId\": \"12345\",\n \"data\": {\n   \"latitude\": \"46.4979\",\n   \"longitude\": \"20.0402\",\n   \"heading\": \"360\"\n },\n \"time\": \"2\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Start Simulation",
					"request": {
						"url": "http://{{url}}:9000/v1/simulation/1",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Authorization example",
					"request": {
						"url": "http://{{url}}:{{port}}/v1/authexample",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Requests access to a resource using an authentication token. "
					},
					"response": []
				}
			]
		},
		{
			"name": "Device Health",
			"description": "",
			"item": [
				{
					"name": "List Health Events (Admin)",
					"request": {
						"url": {
							"raw": "{{protocol}}{{url}}{{port}}/v1/device-health/events?tenantId={{tenantId}}&deviceId={{deviceId}}&from=2019-01-01T00:00:01Z&to=2019-12-31T23:59:59Z",
							"host": [
								"{{protocol}}{{url}}{{port}}"
							],
							"path": [
								"v1",
								"device-health",
								"events"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}"
								},
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								},
								{
									"key": "from",
									"value": "2019-01-01T00:00:01Z"
								},
								{
									"key": "to",
									"value": "2019-12-31T23:59:59Z"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Health Events (Tenant)",
					"request": {
						"url": {
							"raw": "{{protocol}}{{url}}{{port}}/v1/device-health/tenants/{{tenantId}}/events?deviceId={{deviceId}}&from=2019-11-14T00:00:01Z&to=2019-11-20T23:59:59Z",
							"host": [
								"{{protocol}}{{url}}{{port}}"
							],
							"path": [
								"v1",
								"device-health",
								"tenants",
								"{{tenantId}}",
								"events"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{deviceId}}"
								},
								{
									"key": "from",
									"value": "2019-11-14T00:00:01Z"
								},
								{
									"key": "to",
									"value": "2019-11-20T23:59:59Z"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Spool Ingested Events To AMQP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"jobId\", jsonData.id);",
									"tests[\"Job ID Set\"] = jsonData.id === postman.getEnvironmentVariable(\"jobId\");"
								]
							}
						}
					],
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/device-health/spool-jobs",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"deviceId\": \"{{deviceId}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "View Spool Job Status",
					"request": {
						"url": "{{protocol}}{{url}}{{port}}/v1/device-health/spool-jobs/{{jobId}}",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}